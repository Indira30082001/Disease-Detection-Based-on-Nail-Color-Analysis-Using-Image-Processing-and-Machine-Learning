{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\preet\\\\Downloads\\\\Final Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Define the API URL as a constant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\";\n\n// Function to format disease names for display\nconst formatDiseaseName = name => {\n  return name.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(\" \");\n};\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n    setError(null);\n    setResult(null);\n  };\n  const handleSubmit = async () => {\n    if (!image) {\n      setError(\"Please select an image first\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.post(`${API_URL}/predict`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.data.success) {\n        setResult(response.data);\n      } else {\n        setError(response.data.error || \"Prediction failed\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error:\", error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || `Failed to connect to the server at ${API_URL}. Please ensure the backend server is running.`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Skin Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange,\n        accept: \"image/*\",\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: loading || !image,\n        className: `submit-button ${loading ? \"loading\" : \"\"}`,\n        children: loading ? \"Processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help-text\",\n        children: \"If you're seeing a connection error, please ensure the backend server is running on port 5000.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"disease-name\",\n        children: [\"Disease: \", formatDiseaseName(result.disease)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"confidence\",\n        children: [\"Confidence: \", (result.confidence * 100).toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), result.confidence < 0.7 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warning-text\",\n        children: \"Note: This prediction has low confidence. Please consult a healthcare professional for accurate diagnosis.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disclaimer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Disclaimer: This tool is for educational purposes only and should not be used as a substitute for professional medical advice. Always consult with a qualified healthcare provider for proper diagnosis and treatment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TeZrMMqtBzxhc/k/DUvaEnXC7Ks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","formatDiseaseName","name","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","App","_s","image","setImage","result","setResult","error","setError","loading","setLoading","handleImageChange","e","target","files","handleSubmit","formData","FormData","append","response","post","headers","data","success","_error$response","_error$response$data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","disabled","disease","confidence","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/preet/Downloads/Final Project/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Define the API URL as a constant\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\n// Function to format disease names for display\r\nconst formatDiseaseName = (name) => {\r\n  return name\r\n    .split(\"_\")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n    .join(\" \");\r\n};\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleImageChange = (e) => {\r\n    setImage(e.target.files[0]);\r\n    setError(null);\r\n    setResult(null);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!image) {\r\n      setError(\"Please select an image first\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/predict`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setResult(response.data);\r\n      } else {\r\n        setError(response.data.error || \"Prediction failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setError(\r\n        error.response?.data?.error ||\r\n          `Failed to connect to the server at ${API_URL}. Please ensure the backend server is running.`\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Skin Disease Detection</h2>\r\n      <div className=\"upload-section\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleImageChange}\r\n          accept=\"image/*\"\r\n          className=\"file-input\"\r\n        />\r\n        <button\r\n          onClick={handleSubmit}\r\n          disabled={loading || !image}\r\n          className={`submit-button ${loading ? \"loading\" : \"\"}`}\r\n        >\r\n          {loading ? \"Processing...\" : \"Submit\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n          <p className=\"help-text\">\r\n            If you're seeing a connection error, please ensure the backend\r\n            server is running on port 5000.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"result-section\">\r\n          <h3>Prediction Result:</h3>\r\n          <p className=\"disease-name\">\r\n            Disease: {formatDiseaseName(result.disease)}\r\n          </p>\r\n          <p className=\"confidence\">\r\n            Confidence: {(result.confidence * 100).toFixed(2)}%\r\n          </p>\r\n          {result.confidence < 0.7 && (\r\n            <p className=\"warning-text\">\r\n              Note: This prediction has low confidence. Please consult a\r\n              healthcare professional for accurate diagnosis.\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"disclaimer\">\r\n        <p>\r\n          Disclaimer: This tool is for educational purposes only and should not\r\n          be used as a substitute for professional medical advice. Always\r\n          consult with a qualified healthcare provider for proper diagnosis and\r\n          treatment.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}