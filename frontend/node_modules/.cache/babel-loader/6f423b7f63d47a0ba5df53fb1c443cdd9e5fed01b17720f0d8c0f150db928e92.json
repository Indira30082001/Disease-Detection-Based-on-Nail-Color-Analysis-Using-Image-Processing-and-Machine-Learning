{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\preet\\\\Downloads\\\\Final Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Define the API URL as a constant\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\";\n\n// Remove the global axios defaults as they can cause CORS issues\n// Configure axios for this specific instance instead\n\n// Function to format disease names for display\nconst formatDiseaseName = name => {\n  return name.split(\"_\").map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(\" \");\n};\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setPreviewUrl(URL.createObjectURL(file));\n      setError(null);\n      setResult(null);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!image) {\n      setError(\"Please select an image first\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    setLoading(true);\n    setError(null);\n    try {\n      console.log(\"Sending request to:\", `${API_URL}/predict`);\n      console.log(\"Image being sent:\", image);\n      const response = await axios.post(`${API_URL}/predict`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        withCredentials: true\n      });\n      console.log(\"Response received:\", response.data);\n      if (response.data.success) {\n        setResult(response.data);\n      } else {\n        setError(response.data.error || \"Prediction failed\");\n      }\n    } catch (error) {\n      console.error(\"Detailed error:\", error);\n      if (error.response) {\n        console.error(\"Error response:\", error.response.data);\n        console.error(\"Error status:\", error.response.status);\n        setError(`Server error (${error.response.status}): ${error.response.data.error || \"Unknown error\"}`);\n      } else if (error.request) {\n        console.error(\"No response received:\", error.request);\n        setError(\"No response from server. Please ensure the backend server is running on port 5000.\");\n      } else {\n        console.error(\"Error setting up request:\", error.message);\n        setError(`Error: ${error.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Skin Disease Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange,\n        accept: \"image/*\",\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\",\n          style: {\n            maxWidth: \"300px\",\n            marginTop: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: loading || !image,\n        className: `submit-button ${loading ? \"loading\" : \"\"}`,\n        children: loading ? \"Processing...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"help-text\",\n        children: \"If you're seeing a connection error, please ensure the backend server is running on port 5000.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predictions-list\",\n        children: result.all_predictions.map((pred, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prediction-item ${index === 0 ? \"top-prediction\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"disease-name\",\n            children: [formatDiseaseName(pred.disease), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"confidence\",\n            children: [(pred.confidence * 100).toFixed(2), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warning-text\",\n        children: \"Note: Please consult a healthcare professional for accurate diagnosis. These predictions are for educational purposes only.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disclaimer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Disclaimer: This tool is for educational purposes only and should not be used as a substitute for professional medical advice. Always consult with a qualified healthcare provider for proper diagnosis and treatment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+yGnOlQU9DP0NvThJZZGFVVxk6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","formatDiseaseName","name","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","App","_s","image","setImage","result","setResult","error","setError","loading","setLoading","previewUrl","setPreviewUrl","handleImageChange","e","file","target","files","URL","createObjectURL","handleSubmit","formData","FormData","append","console","log","response","post","headers","withCredentials","data","success","status","request","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","src","alt","style","maxWidth","marginTop","onClick","disabled","all_predictions","pred","index","disease","confidence","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/preet/Downloads/Final Project/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// Define the API URL as a constant\r\nconst API_URL = \"http://localhost:5000\";\r\n\r\n// Remove the global axios defaults as they can cause CORS issues\r\n// Configure axios for this specific instance instead\r\n\r\n// Function to format disease names for display\r\nconst formatDiseaseName = (name) => {\r\n  return name\r\n    .split(\"_\")\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\r\n    .join(\" \");\r\n};\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState(null);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImage(file);\r\n      setPreviewUrl(URL.createObjectURL(file));\r\n      setError(null);\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!image) {\r\n      setError(\"Please select an image first\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log(\"Sending request to:\", `${API_URL}/predict`);\r\n      console.log(\"Image being sent:\", image);\r\n\r\n      const response = await axios.post(`${API_URL}/predict`, formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        withCredentials: true,\r\n      });\r\n\r\n      console.log(\"Response received:\", response.data);\r\n\r\n      if (response.data.success) {\r\n        setResult(response.data);\r\n      } else {\r\n        setError(response.data.error || \"Prediction failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Detailed error:\", error);\r\n      if (error.response) {\r\n        console.error(\"Error response:\", error.response.data);\r\n        console.error(\"Error status:\", error.response.status);\r\n        setError(\r\n          `Server error (${error.response.status}): ${\r\n            error.response.data.error || \"Unknown error\"\r\n          }`\r\n        );\r\n      } else if (error.request) {\r\n        console.error(\"No response received:\", error.request);\r\n        setError(\r\n          \"No response from server. Please ensure the backend server is running on port 5000.\"\r\n        );\r\n      } else {\r\n        console.error(\"Error setting up request:\", error.message);\r\n        setError(`Error: ${error.message}`);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Skin Disease Detection</h2>\r\n      <div className=\"upload-section\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleImageChange}\r\n          accept=\"image/*\"\r\n          className=\"file-input\"\r\n        />\r\n        {previewUrl && (\r\n          <div className=\"image-preview\">\r\n            <img\r\n              src={previewUrl}\r\n              alt=\"Preview\"\r\n              style={{ maxWidth: \"300px\", marginTop: \"10px\" }}\r\n            />\r\n          </div>\r\n        )}\r\n        <button\r\n          onClick={handleSubmit}\r\n          disabled={loading || !image}\r\n          className={`submit-button ${loading ? \"loading\" : \"\"}`}\r\n        >\r\n          {loading ? \"Processing...\" : \"Submit\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n          <p className=\"help-text\">\r\n            If you're seeing a connection error, please ensure the backend\r\n            server is running on port 5000.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {result && (\r\n        <div className=\"result-section\">\r\n          <h3>Prediction Result:</h3>\r\n          <div className=\"predictions-list\">\r\n            {result.all_predictions.map((pred, index) => (\r\n              <div\r\n                key={index}\r\n                className={`prediction-item ${\r\n                  index === 0 ? \"top-prediction\" : \"\"\r\n                }`}\r\n              >\r\n                <span className=\"disease-name\">\r\n                  {formatDiseaseName(pred.disease)}:\r\n                </span>\r\n                <span className=\"confidence\">\r\n                  {(pred.confidence * 100).toFixed(2)}%\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <p className=\"warning-text\">\r\n            Note: Please consult a healthcare professional for accurate\r\n            diagnosis. These predictions are for educational purposes only.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"disclaimer\">\r\n        <p>\r\n          Disclaimer: This tool is for educational purposes only and should not\r\n          be used as a substitute for professional medical advice. Always\r\n          consult with a qualified healthcare provider for proper diagnosis and\r\n          treatment.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}